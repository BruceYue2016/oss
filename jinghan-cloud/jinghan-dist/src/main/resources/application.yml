eureka:
  instance:
        hostname: peer1.jinghanit.com
        registerPort: 9999
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.registerPort}/eureka/

server:
  port: 8000

##需要指明spring.application.name,这个很重要，这在以后的服务与服务之间相互调用一般都是根据这个name
spring:
  application:
    name: jinghan-dist

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://192.168.2.143:3306/xcx_shop?characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
    driver-class-name: com.mysql.jdbc.Driver
    username: xcx_shop
    password: Jinghandb123
    initialSize: 2
    maxTotal: 10
    maxActive: 5
    maxWaitMillis: 60000
    maxIdle: 3
    minIdle: 1
    removeAbandonedOnMaintenance: true
    removeAbandonedTimeout: 60
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    numTestsPerEvictionRun: 2
    validationQuery: select 1
    testWhileIdle: true
    testOnBorrow: true
    testOnReturn: true
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据 http://localhost:8080/druid/index.html admin/admin
    useGlobalDataSourceStat: true

  #jpa
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL5Dialect

  #cache
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: 192.168.2.143
    # Redis服务器连接端口
    port: 7379
    # Redis服务器连接密码（默认为空）
    password: Jinghansh123@bucketfunny
    # 连接池最大连接数（使用负值表示没有限制）
    pool:
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 6000
        # 连接池中的最大空闲连接
        max-idle: 5
        # 连接池中的最小空闲连接
        min-idle: 1